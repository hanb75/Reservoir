//Main.java
//Team Reservoir
//Main Class

//imports 
import javax.swing.JFrame;

public class main {

	public static void main(String[] args)
	{
		GUI go = new GUI();
		go.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		go.setSize(900, 700);
		go.setVisible(true);
		go.setLocationRelativeTo(null);
	}

}

===============================================================
//GUI.java
//Team Reservoir 
//Gui class

//imports
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JFileChooser;


public class GUI extends JFrame
{
	//private JButton reg;
	//private JButton custom;
	
	public GUI()
	{		
		//set title
		super("ChequeBox");
		
		//set layout
		setLayout(new FlowLayout());
		
		//create menu bar for storing file,edit and help
		JMenuBar menu = new JMenuBar();
		
		
		//create file menu
		JMenu file = new JMenu("File");
		file.setMnemonic(KeyEvent.VK_F);
		
		//build file menu
		JMenuItem upload = new JMenuItem("Upload File");//create upload menu item
		file.add(upload);//add upload item
                
                JFileChooser fileUpload = new JFileChooser();//making new file chooser item
		
		JMenuItem export = new JMenuItem("Export File");//create export menu item
		file.add(export);//add export item
		
		JMenuItem exit = new JMenuItem("Exit");//create export menu item
		file.add(exit);//add export item
		
		//add file to frame
		menu.add(file);//add file to frame
		setJMenuBar(menu);
			
		
		//create edit menu
		JMenu edit = new JMenu("Edit");
		edit.setMnemonic(KeyEvent.VK_E);
		
		JMenuItem editD = new JMenuItem("Edit Donation");//create edit donation item
		edit.add(editD);//add edit donation item
		
		JMenuItem deleteD = new JMenuItem("Delete donation");//create delete donation item
		edit.add(deleteD);//add delete donation item
				
		//add edit to frame
		menu.add(edit);
		setJMenuBar(menu);
		
		//create help menu
		JMenu help = new JMenu("Help");
		help.setMnemonic(KeyEvent.VK_H);
                
                JMenuItem hDelete = new JMenuItem("How To Delete Donation");//create how to delete item
                help.add(hDelete);//add how to delete donation item
				
		//add help to frame
		menu.add(help);
		setJMenuBar(menu);
		
		
                
                
///////////////////////////adding all handlers///////////////////////////
		
        //file menu handlers        
               //file menu upload handler
                HandlerUpload uphandler = new HandlerUpload();
                upload.addActionListener(uphandler);
                
                
                //file menu export handler
                HandlerExport exportHandler = new HandlerExport();
                export.addActionListener(exportHandler);
                
                //file menu exit handler
		HandlerExit exitHandler = new HandlerExit();
		exit.addActionListener(exitHandler);
       //edit menu handlers         
                //edit menu edit donation
		HandlerEdit editHandler = new HandlerEdit();
		editD.addActionListener(editHandler);
                
                //edit menu delete donation
                HandlerDelete deleteHandler = new HandlerDelete();
                deleteD.addActionListener(deleteHandler);
                
      //help menu handlers
                HandlerHdelete htdHandler = new HandlerHdelete();
                hDelete.addActionListener(htdHandler);
                
	}
	
       //file menu upload handler

            private class HandlerUpload implements ActionListener
	{    
                public void actionPerformed(ActionEvent event)
		{
                        // int returnVal = fileUpload.showOpenDialog( this );
		}
	}
        
            //file menu export handler
            private class HandlerExport implements ActionListener
	{
		public void actionPerformed(ActionEvent event)
		{
                        JOptionPane.showMessageDialog(null, "test");

		}
	}
           
        //file menu exit handler
            private class HandlerExit implements ActionListener
	{
		public void actionPerformed(ActionEvent event)
		{
			int x = JOptionPane.showConfirmDialog(null, "Would you like to exit?","Exit Confirmation",JOptionPane.YES_NO_OPTION);
			if (x == JOptionPane.YES_OPTION)
			{
				System.exit(0);
			}
		}
	}
	
            
        //edit menu edit donation handler
            private class HandlerEdit implements ActionListener
	{
		public void actionPerformed(ActionEvent event)
		{
			JOptionPane.showMessageDialog(null, "test");
		}
	}
        
        //edit menu delete handler
            private class HandlerDelete implements ActionListener
	{
		public void actionPerformed(ActionEvent event)
		{
			JOptionPane.showMessageDialog(null, "test");
		}
	}
            
          //help menu delete handler
            private class HandlerHdelete implements ActionListener
	{
		public void actionPerformed(ActionEvent event)
		{
                    JOptionPane.showMessageDialog(null, "To delete a donation, select the desired donation "
                    + "\n to be removed and go to Edit>Delete Donation. "
                    + "\n A dialog box will appear asking if you are sure you "
                    + "\n want to delete the donation. Click \"Yes\".", "How to delete a donation", 
                    JOptionPane.PLAIN_MESSAGE);
		}
	}   
}
